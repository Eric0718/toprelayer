// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bridge

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// NearBridgeBridgeState is an auto generated low-level Go binding around an user-defined struct.
type NearBridgeBridgeState struct {
	CurrentHeight     *big.Int
	NextTimestamp     *big.Int
	NumBlockProducers *big.Int
}

// BridgeMetaData contains all meta data concerning the Bridge contract.
var BridgeMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"contractEd25519\",\"name\":\"ed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lockEthAmount_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pausedFlags_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"height\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"BlockHashAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"height\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"BlockHashReverted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"addLightClientBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"adminDelegatecall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"}],\"name\":\"adminPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminReceiveEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"adminSendEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"key\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"adminSstore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"key\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"adminSstoreWithMask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"height\",\"type\":\"uint64\"}],\"name\":\"blockHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"res\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"height\",\"type\":\"uint64\"}],\"name\":\"blockMerkleRoots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"res\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgeState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"currentHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numBlockProducers\",\"type\":\"uint256\"}],\"internalType\":\"structNearBridge.BridgeState\",\"name\":\"res\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashCode\",\"type\":\"bytes32\"}],\"name\":\"getHeightByHash\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"height\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxHeight\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"height\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initWithBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockEthAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60a06040523480156200001157600080fd5b5060405162003840380380620038408339818101604052810190620000379190620001b1565b8181816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060018190555050508373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050826003819055505050505062000223565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f982620000cc565b9050919050565b60006200010d82620000ec565b9050919050565b6200011f8162000100565b81146200012b57600080fd5b50565b6000815190506200013f8162000114565b92915050565b6000819050919050565b6200015a8162000145565b81146200016657600080fd5b50565b6000815190506200017a816200014f565b92915050565b6200018b81620000ec565b81146200019757600080fd5b50565b600081519050620001ab8162000180565b92915050565b60008060008060808587031215620001ce57620001cd620000c7565b5b6000620001de878288016200012e565b9450506020620001f18782880162000169565b935050604062000204878288016200019a565b9250506060620002178782880162000169565b91505092959194509250565b6080516136016200023f6000396000610f2b01526136016000f3fe60806040526004361061011f5760003560e01c80636d2d6ae0116100a0578063be831a2e11610064578063be831a2e146103d8578063cf22b57714610401578063d0e30db01461042c578063f48ab4e014610436578063f851a440146104405761011f565b80636d2d6ae0146102da57806370a08231146103035780637875a55c1461034057806383bfc6291461036b578063b8e9744c146103a85761011f565b80633ccfd60b116100e75780633ccfd60b1461021b5780634466ec2c14610232578063530208f21461025d5780635c975abb146102865780636c4624c3146102b15761011f565b8063158ef93e14610124578063160bc0ba1461014f5780631e703806146101785780632692c59f146101b557806337da8ec5146101de575b600080fd5b34801561013057600080fd5b5061013961046b565b6040516101469190612485565b60405180910390f35b34801561015b57600080fd5b50610176600480360381019061017191906125fa565b61047e565b005b34801561018457600080fd5b5061019f600480360381019061019a9190612683565b6106af565b6040516101ac91906126c9565b60405180910390f35b3480156101c157600080fd5b506101dc60048036038101906101d7919061271a565b61074a565b005b3480156101ea57600080fd5b5061020560048036038101906102009190612683565b6107ac565b60405161021291906126c9565b60405180910390f35b34801561022757600080fd5b50610230610847565b005b34801561023e57600080fd5b506102476109eb565b6040516102549190612798565b60405180910390f35b34801561026957600080fd5b50610284600480360381019061027f9190612811565b610a2f565b005b34801561029257600080fd5b5061029b610ad2565b6040516102a89190612860565b60405180910390f35b3480156102bd57600080fd5b506102d860048036038101906102d3919061287b565b610ad8565b005b3480156102e657600080fd5b5061030160048036038101906102fc91906125fa565b610b41565b005b34801561030f57600080fd5b5061032a6004803603810190610325919061290c565b611168565b6040516103379190612860565b60405180910390f35b34801561034c57600080fd5b50610355611180565b6040516103629190612860565b60405180910390f35b34801561037757600080fd5b50610392600480360381019061038d9190612965565b611186565b60405161039f91906129a1565b60405180910390f35b6103c260048036038101906103bd91906129bc565b611221565b6040516103cf9190612aa0565b60405180910390f35b3480156103e457600080fd5b506103ff60048036038101906103fa9190612ac2565b6112fd565b005b34801561040d57600080fd5b5061041661135c565b60405161042391906129a1565b60405180910390f35b6104346113e4565b005b61043e6114ed565b005b34801561044c57600080fd5b50610455611547565b6040516104629190612b11565b60405180910390f35b600260009054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d657600080fd5b600260009054906101000a900460ff1615610526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051d90612b89565b60405180910390fd5b6001600260006101000a81548160ff021916908315150217905550600061054c8261156b565b90506000610559826115a3565b90506105648261183e565b8060800151600001516105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a390612c1b565b60405180910390fd5b6105bf816080015160200151600461188b565b8060c00151609e600083604001516000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002081905550806040015160e00151609f600083604001516000015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000208190555080604001516000015160a060008360c00151815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555080604001516000015160a260006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505050565b60006010600081600154161480610711575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61071a57600080fd5b609f60008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002054915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107a257600080fd5b8060018190555050565b6000601060008160015416148061080e575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61081757600080fd5b609e60008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002054915050919050565b60026000816001541614806108a7575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6108b057600080fd5b609d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361090a57600080fd5b600060a160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000810361095b57600080fd5b600060a160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109e6573d6000803e3d6000fd5b505050565b6109f36122a1565b60a260009054906101000a900467ffffffffffffffff1667ffffffffffffffff1681600001818152505060046001015481604001818152505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a8757600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610acd573d6000803e3d6000fd5b505050565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b3057600080fd5b825480828285181618845550505050565b6004600081600154161480610ba1575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610baa57600080fd5b600260009054906101000a900460ff16610bf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf090612c87565b60405180910390fd5b60035460a160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7490612cf3565b60405180910390fd5b6000610c888361156b565b90506000610c95826115a3565b9050610ca08261183e565b600160a260009054906101000a900467ffffffffffffffff16610cc39190612d42565b67ffffffffffffffff1681604001516000015167ffffffffffffffff1614610cea57600080fd5b6004600101548160a00151511015610d37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2e90612dcc565b60405180910390fd5b600080806000600460010154915091505b808214610e335760006004606601600184901c60328110610d6c57610d6b612dec565b5b015490508460a001518381518110610d8757610d86612dec565b5b60200260200101516000015115610dbc578060801c6fffffffffffffffffffffffffffffffff1684610db99190612e1b565b93505b8183610dc790612e71565b93508303610dd55750610e33565b8460a001518381518110610dec57610deb612dec565b5b60200260200101516000015115610e21578060001c6fffffffffffffffffffffffffffffffff1684610e1e9190612e1b565b93505b5081610e2c90612e71565b9150610d48565b50506004609801548111610e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7390612f05565b60405180910390fd5b6000806000600460010154915091505b808210156110115760008460a001518381518110610ead57610eac612dec565b5b60200260200101519050806000015115610ffd576000808660c00151610eda886040015160000151611a7e565b600060481b604051602001610ef2949392919061300c565b604051602081830303815290604052905060008082806020019051810190610f1a91906130c7565b9150915060008460200151905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ebd1b95160046002018a60648110610f7c57610f7b612dec565b5b01548460000151856020015188886040518663ffffffff1660e01b8152600401610faa959493929190613116565b602060405180830381865afa158015610fc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610feb9190613195565b905080610ff757600080fd5b50505050505b50818061100990612e71565b925050610e8c565b50508160800151600001511561103557611034826080015160200151600461188b565b5b8160c00151609e600084604001516000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002081905550816040015160e00151609f600084604001516000015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000208190555081604001516000015160a060008460c00151815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555033609d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081604001516000015160a260006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050505050565b60a16020528060005260406000206000915090505481565b60035481565b600060106000816001541614806111e8575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6111f157600080fd5b60a0600084815260200190815260200160002060009054906101000a900467ffffffffffffffff16915050919050565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461127b57600080fd5b6000808473ffffffffffffffffffffffffffffffffffffffff16846040516112a391906131fe565b600060405180830381855af49150503d80600081146112de576040519150601f19603f3d011682016040523d82523d6000602084013e6112e3565b606091505b5091509150816112f257600080fd5b809250505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461135557600080fd5b8082555050565b600060106000816001541614806113be575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6113c757600080fd5b60a260009054906101000a900467ffffffffffffffff1691505090565b6001600081600154161480611444575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61144d57600080fd5b6003543414801561149d5750600060a160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b6114a657600080fd5b3460a160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461154557600080fd5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6115736122c2565b60008290506020810182600001818152505061158e81611b0d565b82600001510182602001818152505050919050565b6115ab6122dc565b6115b482611b18565b8160000181815250506115c682611b18565b8160200181815250506115d882611b35565b81604001819052506115e982611b18565b8160600181815250506115fb82611c1c565b8160800181905250600061160e83611c89565b63ffffffff1690508067ffffffffffffffff8111156116305761162f6124cf565b5b60405190808252806020026020018201604052801561166957816020015b61165661233c565b81526020019060019003908161164e5790505b508260a0018190525060005b818110156116bb5761168684611cb1565b8360a00151828151811061169d5761169c612dec565b5b602002602001018190525080806116b390612e71565b915050611675565b506002808360400151610100015184606001516040516020016116df929190613215565b6040516020818303038152906040526040516116fb91906131fe565b602060405180830381855afa158015611718573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061173b9190613241565b8360000151604051602001611751929190613215565b60405160208183030381529060405260405161176d91906131fe565b602060405180830381855afa15801561178a573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906117ad9190613241565b8260c0018181525050600282602001518360c001516040516020016117d3929190613215565b6040516020818303038152906040526040516117ef91906131fe565b602060405180830381855afa15801561180c573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061182f9190613241565b8260e001818152505050919050565b8060200151816000015114611888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187f906132ba565b60405180910390fd5b50565b60008251905060648111156118d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cc90613372565b60405180910390fd5b80826001018190555060005b81811015611934578381815181106118fc576118fb612dec565b5b6020026020010151600001516000015183600201826064811061192257611921612dec565b5b018190555080806001019150506118e1565b506000805b828114611a5a57600085828151811061195557611954612dec565b5b6020026020010151602001519050806fffffffffffffffffffffffffffffffff16830192508382600101925082036119c3578060801b6fffffffffffffffffffffffffffffffff191685606601600184901c603281106119b8576119b7612dec565b5b018190555050611a5a565b60008683815181106119d8576119d7612dec565b5b6020026020010151602001519050806fffffffffffffffffffffffffffffffff1684019350806fffffffffffffffffffffffffffffffff168260801b6fffffffffffffffffffffffffffffffff191660001c0160001b86606601600185901c60328110611a4857611a47612dec565b5b01819055505050806001019050611939565b5060036002820281611a6f57611a6e613392565b5b04836098018190555050505050565b6000600867ff00ff00ff00ff00831667ffffffffffffffff16901c600866ff00ff00ff00ff841667ffffffffffffffff16901b179150601067ffff0000ffff0000831667ffffffffffffffff16901c601065ffff0000ffff841667ffffffffffffffff16901b17915060208267ffffffffffffffff16901c60208367ffffffffffffffff16901b179050919050565b600081519050919050565b6000611b2e602083611cf290919063ffffffff16565b9050919050565b611b3d61235e565b611b5160d083611d2f90919063ffffffff16565b81610100018181525050611b6482611d5a565b816000019067ffffffffffffffff16908167ffffffffffffffff1681525050611b8c82611b18565b816020018181525050611b9e82611b18565b816040018181525050611bb082611b18565b816060018181525050611bc282611b18565b816080018181525050611bd482611d5a565b8160a0019067ffffffffffffffff16908167ffffffffffffffff1681525050611bfc82611b18565b8160c0018181525050611c0e82611b18565b8160e0018181525050919050565b611c246123d3565b611c2d82611d82565b816000019015159081151581525050806000015115611c8457600082600001519050611c5883611de7565b8260200181905250611c7981828560000151611c7491906133c1565b611e9e565b826040018181525050505b919050565b6000611caa611ca2600484611cf290919063ffffffff16565b60e01c611ebd565b9050919050565b611cb961233c565b611cc282611d82565b816000019015159081151581525050806000015115611ced57611ce482611f01565b81602001819052505b919050565b6000611d078284611f8090919063ffffffff16565b611d148360000151611b0d565b60001b90508183600001818151019150818152505092915050565b6000611d448284611f8090919063ffffffff16565b611d52836000015183611e9e565b905092915050565b6000611d7b611d73600884611cf290919063ffffffff16565b60c01c611a7e565b9050919050565b600080611d8e83611fd1565b905060018160ff161115611dd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dce90613441565b60405180910390fd5b60008160ff161415915050919050565b60606000611df483611c89565b63ffffffff1690508067ffffffffffffffff811115611e1657611e156124cf565b5b604051908082528060200260200182016040528015611e4f57816020015b611e3c6123f9565b815260200190600190039081611e345790505b50915060005b81811015611e9757611e6684611ff1565b838281518110611e7957611e78612dec565b5b60200260200101819052508080611e8f90612e71565b915050611e55565b5050919050565b600060206000838560025afa5b8015611eab5760005191505092915050565b6000600863ff00ff00831663ffffffff16901c600862ff00ff841663ffffffff16901b17915060108263ffffffff16901c60108363ffffffff16901b179050919050565b611f09612434565b6000611f1483611fd1565b60ff1614611f57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f4e906134d3565b60405180910390fd5b611f6082611b18565b816000018181525050611f7282611b18565b816020018181525050919050565b8160200151818360000151011115611fcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fc49061353f565b60405180910390fd5b5050565b6000611fe7600183611cf290919063ffffffff16565b60f81c9050919050565b611ff96123f9565b600061200483611fd1565b905061200f836120a2565b612018836120dc565b826000018190525061202983612149565b82602001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff1681525050600160ff168160ff160361208a57600061207184611fd1565b60ff16141582604001901515908115158152505061209c565b60008260400190151590811515815250505b50919050565b60006120ad82611c89565b63ffffffff1690506120c88183611f8090919063ffffffff16565b808260000181815101915081815250505050565b6120e4612454565b60006120ef83611fd1565b60ff1614612132576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612129906135ab565b60405180910390fd5b61213b82611b18565b816000018181525050919050565b600061216a612162601084611cf290919063ffffffff16565b60801c612171565b9050919050565b600060086fff00ff00ff00ff00ff00ff00ff00ff0083166fffffffffffffffffffffffffffffffff16901c60086eff00ff00ff00ff00ff00ff00ff00ff84166fffffffffffffffffffffffffffffffff16901b17915060106fffff0000ffff0000ffff0000ffff000083166fffffffffffffffffffffffffffffffff16901c60106dffff0000ffff0000ffff0000ffff84166fffffffffffffffffffffffffffffffff16901b17915060206fffffffff00000000ffffffff0000000083166fffffffffffffffffffffffffffffffff16901c60206bffffffff00000000ffffffff84166fffffffffffffffffffffffffffffffff16901b1791506040826fffffffffffffffffffffffffffffffff16901c6040836fffffffffffffffffffffffffffffffff16901b179050919050565b60405180606001604052806000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b604051806101000160405280600080191681526020016000801916815260200161230461235e565b81526020016000801916815260200161231b6123d3565b81526020016060815260200160008019168152602001600080191681525090565b6040518060400160405280600015158152602001612358612434565b81525090565b604051806101200160405280600067ffffffffffffffff16815260200160008019168152602001600080191681526020016000801916815260200160008019168152602001600067ffffffffffffffff1681526020016000801916815260200160008019168152602001600080191681525090565b604051806060016040528060001515815260200160608152602001600080191681525090565b604051806060016040528061240c612454565b815260200160006fffffffffffffffffffffffffffffffff1681526020016000151581525090565b604051806040016040528060008019168152602001600080191681525090565b6040518060200160405280600080191681525090565b60008115159050919050565b61247f8161246a565b82525050565b600060208201905061249a6000830184612476565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612507826124be565b810181811067ffffffffffffffff82111715612526576125256124cf565b5b80604052505050565b60006125396124a0565b905061254582826124fe565b919050565b600067ffffffffffffffff821115612565576125646124cf565b5b61256e826124be565b9050602081019050919050565b82818337600083830152505050565b600061259d6125988461254a565b61252f565b9050828152602081018484840111156125b9576125b86124b9565b5b6125c484828561257b565b509392505050565b600082601f8301126125e1576125e06124b4565b5b81356125f184826020860161258a565b91505092915050565b6000602082840312156126105761260f6124aa565b5b600082013567ffffffffffffffff81111561262e5761262d6124af565b5b61263a848285016125cc565b91505092915050565b600067ffffffffffffffff82169050919050565b61266081612643565b811461266b57600080fd5b50565b60008135905061267d81612657565b92915050565b600060208284031215612699576126986124aa565b5b60006126a78482850161266e565b91505092915050565b6000819050919050565b6126c3816126b0565b82525050565b60006020820190506126de60008301846126ba565b92915050565b6000819050919050565b6126f7816126e4565b811461270257600080fd5b50565b600081359050612714816126ee565b92915050565b6000602082840312156127305761272f6124aa565b5b600061273e84828501612705565b91505092915050565b612750816126e4565b82525050565b60608201600082015161276c6000850182612747565b50602082015161277f6020850182612747565b5060408201516127926040850182612747565b50505050565b60006060820190506127ad6000830184612756565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006127de826127b3565b9050919050565b6127ee816127d3565b81146127f957600080fd5b50565b60008135905061280b816127e5565b92915050565b60008060408385031215612828576128276124aa565b5b6000612836858286016127fc565b925050602061284785828601612705565b9150509250929050565b61285a816126e4565b82525050565b60006020820190506128756000830184612851565b92915050565b600080600060608486031215612894576128936124aa565b5b60006128a286828701612705565b93505060206128b386828701612705565b92505060406128c486828701612705565b9150509250925092565b60006128d9826127b3565b9050919050565b6128e9816128ce565b81146128f457600080fd5b50565b600081359050612906816128e0565b92915050565b600060208284031215612922576129216124aa565b5b6000612930848285016128f7565b91505092915050565b612942816126b0565b811461294d57600080fd5b50565b60008135905061295f81612939565b92915050565b60006020828403121561297b5761297a6124aa565b5b600061298984828501612950565b91505092915050565b61299b81612643565b82525050565b60006020820190506129b66000830184612992565b92915050565b600080604083850312156129d3576129d26124aa565b5b60006129e1858286016128f7565b925050602083013567ffffffffffffffff811115612a0257612a016124af565b5b612a0e858286016125cc565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612a52578082015181840152602081019050612a37565b83811115612a61576000848401525b50505050565b6000612a7282612a18565b612a7c8185612a23565b9350612a8c818560208601612a34565b612a95816124be565b840191505092915050565b60006020820190508181036000830152612aba8184612a67565b905092915050565b60008060408385031215612ad957612ad86124aa565b5b6000612ae785828601612705565b9250506020612af885828601612705565b9150509250929050565b612b0b816128ce565b82525050565b6000602082019050612b266000830184612b02565b92915050565b600082825260208201905092915050565b7f57726f6e6720696e697469616c697a6174696f6e207374616765000000000000600082015250565b6000612b73601a83612b2c565b9150612b7e82612b3d565b602082019050919050565b60006020820190508181036000830152612ba281612b66565b9050919050565b7f496e697469616c697a6174696f6e20626c6f636b206d75737420636f6e74616960008201527f6e206e6578745f62707300000000000000000000000000000000000000000000602082015250565b6000612c05602a83612b2c565b9150612c1082612ba9565b604082019050919050565b60006020820190508181036000830152612c3481612bf8565b9050919050565b7f436f6e7472616374206973206e6f7420696e697469616c697a65640000000000600082015250565b6000612c71601b83612b2c565b9150612c7c82612c3b565b602082019050919050565b60006020820190508181036000830152612ca081612c64565b9050919050565b7f42616c616e6365206973206e6f7420656e6f7567680000000000000000000000600082015250565b6000612cdd601583612b2c565b9150612ce882612ca7565b602082019050919050565b60006020820190508181036000830152612d0c81612cd0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612d4d82612643565b9150612d5883612643565b92508267ffffffffffffffff03821115612d7557612d74612d13565b5b828201905092915050565b7f417070726f76616c206c69737420697320746f6f2073686f7274000000000000600082015250565b6000612db6601a83612b2c565b9150612dc182612d80565b602082019050919050565b60006020820190508181036000830152612de581612da9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612e26826126e4565b9150612e31836126e4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612e6657612e65612d13565b5b828201905092915050565b6000612e7c826126e4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612eae57612ead612d13565b5b600182019050919050565b7f546f6f2066657720617070726f76616c73000000000000000000000000000000600082015250565b6000612eef601183612b2c565b9150612efa82612eb9565b602082019050919050565b60006020820190508181036000830152612f1e81612ee2565b9050919050565b600060ff82169050919050565b60008160f81b9050919050565b6000612f4a82612f32565b9050919050565b612f62612f5d82612f25565b612f3f565b82525050565b6000819050919050565b612f83612f7e826126b0565b612f68565b82525050565b60008160c01b9050919050565b6000612fa182612f89565b9050919050565b612fb9612fb482612643565b612f96565b82525050565b60007fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000082169050919050565b6000819050919050565b61300661300182612fbf565b612feb565b82525050565b60006130188287612f51565b6001820191506130288286612f72565b6020820191506130388285612fa8565b6008820191506130488284612ff5565b60178201915081905095945050505050565b60008151905061306981612939565b92915050565b60007fffffffffffffffffff000000000000000000000000000000000000000000000082169050919050565b6130a48161306f565b81146130af57600080fd5b50565b6000815190506130c18161309b565b92915050565b600080604083850312156130de576130dd6124aa565b5b60006130ec8582860161305a565b92505060206130fd858286016130b2565b9150509250929050565b6131108161306f565b82525050565b600060a08201905061312b60008301886126ba565b61313860208301876126ba565b61314560408301866126ba565b61315260608301856126ba565b61315f6080830184613107565b9695505050505050565b6131728161246a565b811461317d57600080fd5b50565b60008151905061318f81613169565b92915050565b6000602082840312156131ab576131aa6124aa565b5b60006131b984828501613180565b91505092915050565b600081905092915050565b60006131d882612a18565b6131e281856131c2565b93506131f2818560208601612a34565b80840191505092915050565b600061320a82846131cd565b915081905092915050565b60006132218285612f72565b6020820191506132318284612f72565b6020820191508190509392505050565b600060208284031215613257576132566124aa565b5b60006132658482850161305a565b91505092915050565b7f5061727365206572726f723a20454f4920657870656374656400000000000000600082015250565b60006132a4601983612b2c565b91506132af8261326e565b602082019050919050565b600060208201905081810360008301526132d381613297565b9050919050565b7f4974206973206e6f7420657870656374656420686176696e672074686174206d60008201527f616e7920626c6f636b2070726f64756365727320666f72207468652070726f7660208201527f6964656420626c6f636b00000000000000000000000000000000000000000000604082015250565b600061335c604a83612b2c565b9150613367826132da565b606082019050919050565b6000602082019050818103600083015261338b8161334f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006133cc826126e4565b91506133d7836126e4565b9250828210156133ea576133e9612d13565b5b828203905092915050565b7f5061727365206572726f723a20696e76616c696420626f6f6c00000000000000600082015250565b600061342b601983612b2c565b9150613436826133f5565b602082019050919050565b6000602082019050818103600083015261345a8161341e565b9050919050565b7f5061727365206572726f723a20696e76616c6964207369676e6174757265207460008201527f7970650000000000000000000000000000000000000000000000000000000000602082015250565b60006134bd602383612b2c565b91506134c882613461565b604082019050919050565b600060208201905081810360008301526134ec816134b0565b9050919050565b7f5061727365206572726f723a20756e657870656374656420454f490000000000600082015250565b6000613529601b83612b2c565b9150613534826134f3565b602082019050919050565b600060208201905081810360008301526135588161351c565b9050919050565b7f5061727365206572726f723a20696e76616c6964206b65792074797065000000600082015250565b6000613595601d83612b2c565b91506135a08261355f565b602082019050919050565b600060208201905081810360008301526135c481613588565b905091905056fea264697066735822122006d9a1fabb1afb8074c4aed929808833eb2ace430a9e83ca457d2920f0c7238864736f6c634300080d0033",
}

// BridgeABI is the input ABI used to generate the binding from.
// Deprecated: Use BridgeMetaData.ABI instead.
var BridgeABI = BridgeMetaData.ABI

// BridgeBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use BridgeMetaData.Bin instead.
var BridgeBin = BridgeMetaData.Bin

// DeployBridge deploys a new Ethereum contract, binding an instance of Bridge to it.
func DeployBridge(auth *bind.TransactOpts, backend bind.ContractBackend, ed common.Address, lockEthAmount_ *big.Int, admin_ common.Address, pausedFlags_ *big.Int) (common.Address, *types.Transaction, *Bridge, error) {
	parsed, err := BridgeMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(BridgeBin), backend, ed, lockEthAmount_, admin_, pausedFlags_)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Bridge{BridgeCaller: BridgeCaller{contract: contract}, BridgeTransactor: BridgeTransactor{contract: contract}, BridgeFilterer: BridgeFilterer{contract: contract}}, nil
}

// Bridge is an auto generated Go binding around an Ethereum contract.
type Bridge struct {
	BridgeCaller     // Read-only binding to the contract
	BridgeTransactor // Write-only binding to the contract
	BridgeFilterer   // Log filterer for contract events
}

// BridgeCaller is an auto generated read-only Go binding around an Ethereum contract.
type BridgeCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BridgeTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BridgeTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BridgeFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BridgeFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BridgeSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BridgeSession struct {
	Contract     *Bridge           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BridgeCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BridgeCallerSession struct {
	Contract *BridgeCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// BridgeTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BridgeTransactorSession struct {
	Contract     *BridgeTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BridgeRaw is an auto generated low-level Go binding around an Ethereum contract.
type BridgeRaw struct {
	Contract *Bridge // Generic contract binding to access the raw methods on
}

// BridgeCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BridgeCallerRaw struct {
	Contract *BridgeCaller // Generic read-only contract binding to access the raw methods on
}

// BridgeTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BridgeTransactorRaw struct {
	Contract *BridgeTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBridge creates a new instance of Bridge, bound to a specific deployed contract.
func NewBridge(address common.Address, backend bind.ContractBackend) (*Bridge, error) {
	contract, err := bindBridge(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Bridge{BridgeCaller: BridgeCaller{contract: contract}, BridgeTransactor: BridgeTransactor{contract: contract}, BridgeFilterer: BridgeFilterer{contract: contract}}, nil
}

// NewBridgeCaller creates a new read-only instance of Bridge, bound to a specific deployed contract.
func NewBridgeCaller(address common.Address, caller bind.ContractCaller) (*BridgeCaller, error) {
	contract, err := bindBridge(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BridgeCaller{contract: contract}, nil
}

// NewBridgeTransactor creates a new write-only instance of Bridge, bound to a specific deployed contract.
func NewBridgeTransactor(address common.Address, transactor bind.ContractTransactor) (*BridgeTransactor, error) {
	contract, err := bindBridge(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BridgeTransactor{contract: contract}, nil
}

// NewBridgeFilterer creates a new log filterer instance of Bridge, bound to a specific deployed contract.
func NewBridgeFilterer(address common.Address, filterer bind.ContractFilterer) (*BridgeFilterer, error) {
	contract, err := bindBridge(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BridgeFilterer{contract: contract}, nil
}

// bindBridge binds a generic wrapper to an already deployed contract.
func bindBridge(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BridgeABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Bridge *BridgeRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Bridge.Contract.BridgeCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Bridge *BridgeRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Bridge.Contract.BridgeTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Bridge *BridgeRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Bridge.Contract.BridgeTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Bridge *BridgeCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Bridge.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Bridge *BridgeTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Bridge.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Bridge *BridgeTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Bridge.Contract.contract.Transact(opts, method, params...)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Bridge *BridgeCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Bridge.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Bridge *BridgeSession) Admin() (common.Address, error) {
	return _Bridge.Contract.Admin(&_Bridge.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Bridge *BridgeCallerSession) Admin() (common.Address, error) {
	return _Bridge.Contract.Admin(&_Bridge.CallOpts)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address ) view returns(uint256)
func (_Bridge *BridgeCaller) BalanceOf(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Bridge.contract.Call(opts, &out, "balanceOf", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address ) view returns(uint256)
func (_Bridge *BridgeSession) BalanceOf(arg0 common.Address) (*big.Int, error) {
	return _Bridge.Contract.BalanceOf(&_Bridge.CallOpts, arg0)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address ) view returns(uint256)
func (_Bridge *BridgeCallerSession) BalanceOf(arg0 common.Address) (*big.Int, error) {
	return _Bridge.Contract.BalanceOf(&_Bridge.CallOpts, arg0)
}

// BlockHashes is a free data retrieval call binding the contract method 0x37da8ec5.
//
// Solidity: function blockHashes(uint64 height) view returns(bytes32 res)
func (_Bridge *BridgeCaller) BlockHashes(opts *bind.CallOpts, height uint64) ([32]byte, error) {
	var out []interface{}
	err := _Bridge.contract.Call(opts, &out, "blockHashes", height)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// BlockHashes is a free data retrieval call binding the contract method 0x37da8ec5.
//
// Solidity: function blockHashes(uint64 height) view returns(bytes32 res)
func (_Bridge *BridgeSession) BlockHashes(height uint64) ([32]byte, error) {
	return _Bridge.Contract.BlockHashes(&_Bridge.CallOpts, height)
}

// BlockHashes is a free data retrieval call binding the contract method 0x37da8ec5.
//
// Solidity: function blockHashes(uint64 height) view returns(bytes32 res)
func (_Bridge *BridgeCallerSession) BlockHashes(height uint64) ([32]byte, error) {
	return _Bridge.Contract.BlockHashes(&_Bridge.CallOpts, height)
}

// BlockMerkleRoots is a free data retrieval call binding the contract method 0x1e703806.
//
// Solidity: function blockMerkleRoots(uint64 height) view returns(bytes32 res)
func (_Bridge *BridgeCaller) BlockMerkleRoots(opts *bind.CallOpts, height uint64) ([32]byte, error) {
	var out []interface{}
	err := _Bridge.contract.Call(opts, &out, "blockMerkleRoots", height)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// BlockMerkleRoots is a free data retrieval call binding the contract method 0x1e703806.
//
// Solidity: function blockMerkleRoots(uint64 height) view returns(bytes32 res)
func (_Bridge *BridgeSession) BlockMerkleRoots(height uint64) ([32]byte, error) {
	return _Bridge.Contract.BlockMerkleRoots(&_Bridge.CallOpts, height)
}

// BlockMerkleRoots is a free data retrieval call binding the contract method 0x1e703806.
//
// Solidity: function blockMerkleRoots(uint64 height) view returns(bytes32 res)
func (_Bridge *BridgeCallerSession) BlockMerkleRoots(height uint64) ([32]byte, error) {
	return _Bridge.Contract.BlockMerkleRoots(&_Bridge.CallOpts, height)
}

// BridgeState is a free data retrieval call binding the contract method 0x4466ec2c.
//
// Solidity: function bridgeState() view returns((uint256,uint256,uint256) res)
func (_Bridge *BridgeCaller) BridgeState(opts *bind.CallOpts) (NearBridgeBridgeState, error) {
	var out []interface{}
	err := _Bridge.contract.Call(opts, &out, "bridgeState")

	if err != nil {
		return *new(NearBridgeBridgeState), err
	}

	out0 := *abi.ConvertType(out[0], new(NearBridgeBridgeState)).(*NearBridgeBridgeState)

	return out0, err

}

// BridgeState is a free data retrieval call binding the contract method 0x4466ec2c.
//
// Solidity: function bridgeState() view returns((uint256,uint256,uint256) res)
func (_Bridge *BridgeSession) BridgeState() (NearBridgeBridgeState, error) {
	return _Bridge.Contract.BridgeState(&_Bridge.CallOpts)
}

// BridgeState is a free data retrieval call binding the contract method 0x4466ec2c.
//
// Solidity: function bridgeState() view returns((uint256,uint256,uint256) res)
func (_Bridge *BridgeCallerSession) BridgeState() (NearBridgeBridgeState, error) {
	return _Bridge.Contract.BridgeState(&_Bridge.CallOpts)
}

// GetHeightByHash is a free data retrieval call binding the contract method 0x83bfc629.
//
// Solidity: function getHeightByHash(bytes32 hashCode) view returns(uint64 height)
func (_Bridge *BridgeCaller) GetHeightByHash(opts *bind.CallOpts, hashCode [32]byte) (uint64, error) {
	var out []interface{}
	err := _Bridge.contract.Call(opts, &out, "getHeightByHash", hashCode)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetHeightByHash is a free data retrieval call binding the contract method 0x83bfc629.
//
// Solidity: function getHeightByHash(bytes32 hashCode) view returns(uint64 height)
func (_Bridge *BridgeSession) GetHeightByHash(hashCode [32]byte) (uint64, error) {
	return _Bridge.Contract.GetHeightByHash(&_Bridge.CallOpts, hashCode)
}

// GetHeightByHash is a free data retrieval call binding the contract method 0x83bfc629.
//
// Solidity: function getHeightByHash(bytes32 hashCode) view returns(uint64 height)
func (_Bridge *BridgeCallerSession) GetHeightByHash(hashCode [32]byte) (uint64, error) {
	return _Bridge.Contract.GetHeightByHash(&_Bridge.CallOpts, hashCode)
}

// GetMaxHeight is a free data retrieval call binding the contract method 0xcf22b577.
//
// Solidity: function getMaxHeight() view returns(uint64 height)
func (_Bridge *BridgeCaller) GetMaxHeight(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _Bridge.contract.Call(opts, &out, "getMaxHeight")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetMaxHeight is a free data retrieval call binding the contract method 0xcf22b577.
//
// Solidity: function getMaxHeight() view returns(uint64 height)
func (_Bridge *BridgeSession) GetMaxHeight() (uint64, error) {
	return _Bridge.Contract.GetMaxHeight(&_Bridge.CallOpts)
}

// GetMaxHeight is a free data retrieval call binding the contract method 0xcf22b577.
//
// Solidity: function getMaxHeight() view returns(uint64 height)
func (_Bridge *BridgeCallerSession) GetMaxHeight() (uint64, error) {
	return _Bridge.Contract.GetMaxHeight(&_Bridge.CallOpts)
}

// Initialized is a free data retrieval call binding the contract method 0x158ef93e.
//
// Solidity: function initialized() view returns(bool)
func (_Bridge *BridgeCaller) Initialized(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Bridge.contract.Call(opts, &out, "initialized")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Initialized is a free data retrieval call binding the contract method 0x158ef93e.
//
// Solidity: function initialized() view returns(bool)
func (_Bridge *BridgeSession) Initialized() (bool, error) {
	return _Bridge.Contract.Initialized(&_Bridge.CallOpts)
}

// Initialized is a free data retrieval call binding the contract method 0x158ef93e.
//
// Solidity: function initialized() view returns(bool)
func (_Bridge *BridgeCallerSession) Initialized() (bool, error) {
	return _Bridge.Contract.Initialized(&_Bridge.CallOpts)
}

// LockEthAmount is a free data retrieval call binding the contract method 0x7875a55c.
//
// Solidity: function lockEthAmount() view returns(uint256)
func (_Bridge *BridgeCaller) LockEthAmount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Bridge.contract.Call(opts, &out, "lockEthAmount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LockEthAmount is a free data retrieval call binding the contract method 0x7875a55c.
//
// Solidity: function lockEthAmount() view returns(uint256)
func (_Bridge *BridgeSession) LockEthAmount() (*big.Int, error) {
	return _Bridge.Contract.LockEthAmount(&_Bridge.CallOpts)
}

// LockEthAmount is a free data retrieval call binding the contract method 0x7875a55c.
//
// Solidity: function lockEthAmount() view returns(uint256)
func (_Bridge *BridgeCallerSession) LockEthAmount() (*big.Int, error) {
	return _Bridge.Contract.LockEthAmount(&_Bridge.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_Bridge *BridgeCaller) Paused(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Bridge.contract.Call(opts, &out, "paused")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_Bridge *BridgeSession) Paused() (*big.Int, error) {
	return _Bridge.Contract.Paused(&_Bridge.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_Bridge *BridgeCallerSession) Paused() (*big.Int, error) {
	return _Bridge.Contract.Paused(&_Bridge.CallOpts)
}

// AddLightClientBlock is a paid mutator transaction binding the contract method 0x6d2d6ae0.
//
// Solidity: function addLightClientBlock(bytes data) returns()
func (_Bridge *BridgeTransactor) AddLightClientBlock(opts *bind.TransactOpts, data []byte) (*types.Transaction, error) {
	return _Bridge.contract.Transact(opts, "addLightClientBlock", data)
}

// AddLightClientBlock is a paid mutator transaction binding the contract method 0x6d2d6ae0.
//
// Solidity: function addLightClientBlock(bytes data) returns()
func (_Bridge *BridgeSession) AddLightClientBlock(data []byte) (*types.Transaction, error) {
	return _Bridge.Contract.AddLightClientBlock(&_Bridge.TransactOpts, data)
}

// AddLightClientBlock is a paid mutator transaction binding the contract method 0x6d2d6ae0.
//
// Solidity: function addLightClientBlock(bytes data) returns()
func (_Bridge *BridgeTransactorSession) AddLightClientBlock(data []byte) (*types.Transaction, error) {
	return _Bridge.Contract.AddLightClientBlock(&_Bridge.TransactOpts, data)
}

// AdminDelegatecall is a paid mutator transaction binding the contract method 0xb8e9744c.
//
// Solidity: function adminDelegatecall(address target, bytes data) payable returns(bytes)
func (_Bridge *BridgeTransactor) AdminDelegatecall(opts *bind.TransactOpts, target common.Address, data []byte) (*types.Transaction, error) {
	return _Bridge.contract.Transact(opts, "adminDelegatecall", target, data)
}

// AdminDelegatecall is a paid mutator transaction binding the contract method 0xb8e9744c.
//
// Solidity: function adminDelegatecall(address target, bytes data) payable returns(bytes)
func (_Bridge *BridgeSession) AdminDelegatecall(target common.Address, data []byte) (*types.Transaction, error) {
	return _Bridge.Contract.AdminDelegatecall(&_Bridge.TransactOpts, target, data)
}

// AdminDelegatecall is a paid mutator transaction binding the contract method 0xb8e9744c.
//
// Solidity: function adminDelegatecall(address target, bytes data) payable returns(bytes)
func (_Bridge *BridgeTransactorSession) AdminDelegatecall(target common.Address, data []byte) (*types.Transaction, error) {
	return _Bridge.Contract.AdminDelegatecall(&_Bridge.TransactOpts, target, data)
}

// AdminPause is a paid mutator transaction binding the contract method 0x2692c59f.
//
// Solidity: function adminPause(uint256 flags) returns()
func (_Bridge *BridgeTransactor) AdminPause(opts *bind.TransactOpts, flags *big.Int) (*types.Transaction, error) {
	return _Bridge.contract.Transact(opts, "adminPause", flags)
}

// AdminPause is a paid mutator transaction binding the contract method 0x2692c59f.
//
// Solidity: function adminPause(uint256 flags) returns()
func (_Bridge *BridgeSession) AdminPause(flags *big.Int) (*types.Transaction, error) {
	return _Bridge.Contract.AdminPause(&_Bridge.TransactOpts, flags)
}

// AdminPause is a paid mutator transaction binding the contract method 0x2692c59f.
//
// Solidity: function adminPause(uint256 flags) returns()
func (_Bridge *BridgeTransactorSession) AdminPause(flags *big.Int) (*types.Transaction, error) {
	return _Bridge.Contract.AdminPause(&_Bridge.TransactOpts, flags)
}

// AdminReceiveEth is a paid mutator transaction binding the contract method 0xf48ab4e0.
//
// Solidity: function adminReceiveEth() payable returns()
func (_Bridge *BridgeTransactor) AdminReceiveEth(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Bridge.contract.Transact(opts, "adminReceiveEth")
}

// AdminReceiveEth is a paid mutator transaction binding the contract method 0xf48ab4e0.
//
// Solidity: function adminReceiveEth() payable returns()
func (_Bridge *BridgeSession) AdminReceiveEth() (*types.Transaction, error) {
	return _Bridge.Contract.AdminReceiveEth(&_Bridge.TransactOpts)
}

// AdminReceiveEth is a paid mutator transaction binding the contract method 0xf48ab4e0.
//
// Solidity: function adminReceiveEth() payable returns()
func (_Bridge *BridgeTransactorSession) AdminReceiveEth() (*types.Transaction, error) {
	return _Bridge.Contract.AdminReceiveEth(&_Bridge.TransactOpts)
}

// AdminSendEth is a paid mutator transaction binding the contract method 0x530208f2.
//
// Solidity: function adminSendEth(address destination, uint256 amount) returns()
func (_Bridge *BridgeTransactor) AdminSendEth(opts *bind.TransactOpts, destination common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Bridge.contract.Transact(opts, "adminSendEth", destination, amount)
}

// AdminSendEth is a paid mutator transaction binding the contract method 0x530208f2.
//
// Solidity: function adminSendEth(address destination, uint256 amount) returns()
func (_Bridge *BridgeSession) AdminSendEth(destination common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Bridge.Contract.AdminSendEth(&_Bridge.TransactOpts, destination, amount)
}

// AdminSendEth is a paid mutator transaction binding the contract method 0x530208f2.
//
// Solidity: function adminSendEth(address destination, uint256 amount) returns()
func (_Bridge *BridgeTransactorSession) AdminSendEth(destination common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Bridge.Contract.AdminSendEth(&_Bridge.TransactOpts, destination, amount)
}

// AdminSstore is a paid mutator transaction binding the contract method 0xbe831a2e.
//
// Solidity: function adminSstore(uint256 key, uint256 value) returns()
func (_Bridge *BridgeTransactor) AdminSstore(opts *bind.TransactOpts, key *big.Int, value *big.Int) (*types.Transaction, error) {
	return _Bridge.contract.Transact(opts, "adminSstore", key, value)
}

// AdminSstore is a paid mutator transaction binding the contract method 0xbe831a2e.
//
// Solidity: function adminSstore(uint256 key, uint256 value) returns()
func (_Bridge *BridgeSession) AdminSstore(key *big.Int, value *big.Int) (*types.Transaction, error) {
	return _Bridge.Contract.AdminSstore(&_Bridge.TransactOpts, key, value)
}

// AdminSstore is a paid mutator transaction binding the contract method 0xbe831a2e.
//
// Solidity: function adminSstore(uint256 key, uint256 value) returns()
func (_Bridge *BridgeTransactorSession) AdminSstore(key *big.Int, value *big.Int) (*types.Transaction, error) {
	return _Bridge.Contract.AdminSstore(&_Bridge.TransactOpts, key, value)
}

// AdminSstoreWithMask is a paid mutator transaction binding the contract method 0x6c4624c3.
//
// Solidity: function adminSstoreWithMask(uint256 key, uint256 value, uint256 mask) returns()
func (_Bridge *BridgeTransactor) AdminSstoreWithMask(opts *bind.TransactOpts, key *big.Int, value *big.Int, mask *big.Int) (*types.Transaction, error) {
	return _Bridge.contract.Transact(opts, "adminSstoreWithMask", key, value, mask)
}

// AdminSstoreWithMask is a paid mutator transaction binding the contract method 0x6c4624c3.
//
// Solidity: function adminSstoreWithMask(uint256 key, uint256 value, uint256 mask) returns()
func (_Bridge *BridgeSession) AdminSstoreWithMask(key *big.Int, value *big.Int, mask *big.Int) (*types.Transaction, error) {
	return _Bridge.Contract.AdminSstoreWithMask(&_Bridge.TransactOpts, key, value, mask)
}

// AdminSstoreWithMask is a paid mutator transaction binding the contract method 0x6c4624c3.
//
// Solidity: function adminSstoreWithMask(uint256 key, uint256 value, uint256 mask) returns()
func (_Bridge *BridgeTransactorSession) AdminSstoreWithMask(key *big.Int, value *big.Int, mask *big.Int) (*types.Transaction, error) {
	return _Bridge.Contract.AdminSstoreWithMask(&_Bridge.TransactOpts, key, value, mask)
}

// Deposit is a paid mutator transaction binding the contract method 0xd0e30db0.
//
// Solidity: function deposit() payable returns()
func (_Bridge *BridgeTransactor) Deposit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Bridge.contract.Transact(opts, "deposit")
}

// Deposit is a paid mutator transaction binding the contract method 0xd0e30db0.
//
// Solidity: function deposit() payable returns()
func (_Bridge *BridgeSession) Deposit() (*types.Transaction, error) {
	return _Bridge.Contract.Deposit(&_Bridge.TransactOpts)
}

// Deposit is a paid mutator transaction binding the contract method 0xd0e30db0.
//
// Solidity: function deposit() payable returns()
func (_Bridge *BridgeTransactorSession) Deposit() (*types.Transaction, error) {
	return _Bridge.Contract.Deposit(&_Bridge.TransactOpts)
}

// InitWithBlock is a paid mutator transaction binding the contract method 0x160bc0ba.
//
// Solidity: function initWithBlock(bytes data) returns()
func (_Bridge *BridgeTransactor) InitWithBlock(opts *bind.TransactOpts, data []byte) (*types.Transaction, error) {
	return _Bridge.contract.Transact(opts, "initWithBlock", data)
}

// InitWithBlock is a paid mutator transaction binding the contract method 0x160bc0ba.
//
// Solidity: function initWithBlock(bytes data) returns()
func (_Bridge *BridgeSession) InitWithBlock(data []byte) (*types.Transaction, error) {
	return _Bridge.Contract.InitWithBlock(&_Bridge.TransactOpts, data)
}

// InitWithBlock is a paid mutator transaction binding the contract method 0x160bc0ba.
//
// Solidity: function initWithBlock(bytes data) returns()
func (_Bridge *BridgeTransactorSession) InitWithBlock(data []byte) (*types.Transaction, error) {
	return _Bridge.Contract.InitWithBlock(&_Bridge.TransactOpts, data)
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_Bridge *BridgeTransactor) Withdraw(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Bridge.contract.Transact(opts, "withdraw")
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_Bridge *BridgeSession) Withdraw() (*types.Transaction, error) {
	return _Bridge.Contract.Withdraw(&_Bridge.TransactOpts)
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_Bridge *BridgeTransactorSession) Withdraw() (*types.Transaction, error) {
	return _Bridge.Contract.Withdraw(&_Bridge.TransactOpts)
}

// BridgeBlockHashAddedIterator is returned from FilterBlockHashAdded and is used to iterate over the raw logs and unpacked data for BlockHashAdded events raised by the Bridge contract.
type BridgeBlockHashAddedIterator struct {
	Event *BridgeBlockHashAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BridgeBlockHashAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BridgeBlockHashAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BridgeBlockHashAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BridgeBlockHashAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BridgeBlockHashAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BridgeBlockHashAdded represents a BlockHashAdded event raised by the Bridge contract.
type BridgeBlockHashAdded struct {
	Height    uint64
	BlockHash [32]byte
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterBlockHashAdded is a free log retrieval operation binding the contract event 0x5d45c22c440038a3aaf9f8134e7aa1fa59aa2a7fa411d7e818d7701c63827d7e.
//
// Solidity: event BlockHashAdded(uint64 indexed height, bytes32 blockHash)
func (_Bridge *BridgeFilterer) FilterBlockHashAdded(opts *bind.FilterOpts, height []uint64) (*BridgeBlockHashAddedIterator, error) {

	var heightRule []interface{}
	for _, heightItem := range height {
		heightRule = append(heightRule, heightItem)
	}

	logs, sub, err := _Bridge.contract.FilterLogs(opts, "BlockHashAdded", heightRule)
	if err != nil {
		return nil, err
	}
	return &BridgeBlockHashAddedIterator{contract: _Bridge.contract, event: "BlockHashAdded", logs: logs, sub: sub}, nil
}

// WatchBlockHashAdded is a free log subscription operation binding the contract event 0x5d45c22c440038a3aaf9f8134e7aa1fa59aa2a7fa411d7e818d7701c63827d7e.
//
// Solidity: event BlockHashAdded(uint64 indexed height, bytes32 blockHash)
func (_Bridge *BridgeFilterer) WatchBlockHashAdded(opts *bind.WatchOpts, sink chan<- *BridgeBlockHashAdded, height []uint64) (event.Subscription, error) {

	var heightRule []interface{}
	for _, heightItem := range height {
		heightRule = append(heightRule, heightItem)
	}

	logs, sub, err := _Bridge.contract.WatchLogs(opts, "BlockHashAdded", heightRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BridgeBlockHashAdded)
				if err := _Bridge.contract.UnpackLog(event, "BlockHashAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBlockHashAdded is a log parse operation binding the contract event 0x5d45c22c440038a3aaf9f8134e7aa1fa59aa2a7fa411d7e818d7701c63827d7e.
//
// Solidity: event BlockHashAdded(uint64 indexed height, bytes32 blockHash)
func (_Bridge *BridgeFilterer) ParseBlockHashAdded(log types.Log) (*BridgeBlockHashAdded, error) {
	event := new(BridgeBlockHashAdded)
	if err := _Bridge.contract.UnpackLog(event, "BlockHashAdded", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BridgeBlockHashRevertedIterator is returned from FilterBlockHashReverted and is used to iterate over the raw logs and unpacked data for BlockHashReverted events raised by the Bridge contract.
type BridgeBlockHashRevertedIterator struct {
	Event *BridgeBlockHashReverted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BridgeBlockHashRevertedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BridgeBlockHashReverted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BridgeBlockHashReverted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BridgeBlockHashRevertedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BridgeBlockHashRevertedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BridgeBlockHashReverted represents a BlockHashReverted event raised by the Bridge contract.
type BridgeBlockHashReverted struct {
	Height    uint64
	BlockHash [32]byte
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterBlockHashReverted is a free log retrieval operation binding the contract event 0x4e9ddd5df7d5ac983348809fe8a0617e2e53415abf6f504c73ee2b2b22076ef6.
//
// Solidity: event BlockHashReverted(uint64 indexed height, bytes32 blockHash)
func (_Bridge *BridgeFilterer) FilterBlockHashReverted(opts *bind.FilterOpts, height []uint64) (*BridgeBlockHashRevertedIterator, error) {

	var heightRule []interface{}
	for _, heightItem := range height {
		heightRule = append(heightRule, heightItem)
	}

	logs, sub, err := _Bridge.contract.FilterLogs(opts, "BlockHashReverted", heightRule)
	if err != nil {
		return nil, err
	}
	return &BridgeBlockHashRevertedIterator{contract: _Bridge.contract, event: "BlockHashReverted", logs: logs, sub: sub}, nil
}

// WatchBlockHashReverted is a free log subscription operation binding the contract event 0x4e9ddd5df7d5ac983348809fe8a0617e2e53415abf6f504c73ee2b2b22076ef6.
//
// Solidity: event BlockHashReverted(uint64 indexed height, bytes32 blockHash)
func (_Bridge *BridgeFilterer) WatchBlockHashReverted(opts *bind.WatchOpts, sink chan<- *BridgeBlockHashReverted, height []uint64) (event.Subscription, error) {

	var heightRule []interface{}
	for _, heightItem := range height {
		heightRule = append(heightRule, heightItem)
	}

	logs, sub, err := _Bridge.contract.WatchLogs(opts, "BlockHashReverted", heightRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BridgeBlockHashReverted)
				if err := _Bridge.contract.UnpackLog(event, "BlockHashReverted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBlockHashReverted is a log parse operation binding the contract event 0x4e9ddd5df7d5ac983348809fe8a0617e2e53415abf6f504c73ee2b2b22076ef6.
//
// Solidity: event BlockHashReverted(uint64 indexed height, bytes32 blockHash)
func (_Bridge *BridgeFilterer) ParseBlockHashReverted(log types.Log) (*BridgeBlockHashReverted, error) {
	event := new(BridgeBlockHashReverted)
	if err := _Bridge.contract.UnpackLog(event, "BlockHashReverted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
